import numpy as np
import torch
from sklearn.preprocessing import MinMaxScaler
from model import SSDP
from torch.utils.data import Dataset, DataLoader
# dirty_list = [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
# access_list = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0]
# system_list = [[2151666, 17959276, 2751109, 6328207, 1124507, 869852, 0], [2151666, 17959276, 2751134, 6328209, 1124507, 869852, 0], [2151666, 17959276, 2751135, 6328217, 1124507, 869852, 0], [2151666, 17959276, 2751136, 6328237, 1124511, 869852, 0], [2151666, 17959276, 2751136, 6328238, 1124511, 869852, 0], [2151666, 17959276, 2751136, 6328238, 1124511, 869852, 0], [2151666, 17959276, 2751136, 6328238, 1124511, 869852, 0], [2151666, 17959276, 2751136, 6328238, 1124511, 869852, 0], [2151666, 17959276, 2751137, 6328238, 1124511, 869852, 0], [2151666, 17959276, 2751137, 6328238, 1124511, 869852, 0], [2151666, 17959276, 2751137, 6328238, 1124511, 869852, 0], [2151666, 17959276, 2751139, 6328239, 1124511, 869852, 0], [2151666, 17959276, 2751141, 6328240, 1124512, 869852, 0], [2151666, 17959276, 2751142, 6328274, 1124515, 869852, 0], [2151666, 17959276, 2751142, 6328275, 1124515, 869852, 0], [2151666, 17959276, 2751142, 6328275, 1124515, 869852, 0], [2151666, 17959276, 2751142, 6328275, 1124515, 869852, 0], [2151666, 17959276, 2751142, 6328275, 1124515, 869852, 0], [2151666, 17959276, 2751142, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751142, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751142, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751142, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751142, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751142, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751142, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751143, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751143, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751143, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751143, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751143, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751143, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751143, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751143, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751144, 6328277, 1124515, 869852, 0], [2151666, 17959276, 2751144, 6328279, 1124517, 869852, 0], [2151666, 17959276, 2751146, 6328280, 1124517, 869852, 0], [2151666, 17959276, 2751146, 6328280, 1124517, 869852, 0], [2151666, 17959276, 2751146, 6328308, 1124519, 869852, 0], [2151666, 17959276, 2751146, 6328316, 1124520, 869852, 0], [2151666, 17959276, 2751146, 6328316, 1124520, 869852, 0], [2151666, 17959276, 2751146, 6328382, 1124526, 869852, 0], [2151666, 17959276, 2751146, 6328385, 1124527, 869852, 0], [2151666, 17959276, 2751146, 6328389, 1124527, 869852, 0], [2151666, 17959276, 2751146, 6328393, 1124527, 869852, 0], [2151666, 17959276, 2751147, 6328422, 1124528, 869852, 0], [2151666, 17959276, 2751147, 6328426, 1124530, 869852, 0], [2151666, 17959276, 2751147, 6328426, 1124530, 869852, 0], [2151666, 17959276, 2751148, 6328426, 1124530, 869852, 0], [2151666, 17959276, 2751148, 6328426, 1124530, 869852, 0], [2151666, 17959276, 2751148, 6328426, 1124530, 869852, 0], [2151666, 17959276, 2751148, 6328426, 1124530, 869852, 0], [2151666, 17959276, 2751148, 6328426, 1124530, 869852, 0], [2151666, 17959276, 2751148, 6328426, 1124530, 869852, 0], [2151666, 17959276, 2751148, 6328426, 1124530, 869852, 0], [2151666, 17959276, 2751149, 6328429, 1124530, 869852, 0], [2151666, 17959276, 2751149, 6328429, 1124530, 869852, 0], [2151666, 17959276, 2751149, 6328429, 1124530, 869852, 0], [2151666, 17959276, 2751150, 6328429, 1124530, 869852, 0], [2151666, 17959276, 2751152, 6328429, 1124530, 869852, 0], [2151666, 17959276, 2751152, 6328429, 1124530, 869852, 0], [2151666, 17959276, 2751153, 6328429, 1124530, 869852, 0], [2151666, 17959276, 2751153, 6328433, 1124530, 869852, 0], [2151666, 17959276, 2751153, 6328433, 1124530, 869852, 0], [2151666, 17959276, 2751153, 6328433, 1124530, 869852, 0], [2151666, 17959276, 2751153, 6328433, 1124530, 869852, 0], [2151666, 17959276, 2751154, 6328434, 1124530, 869852, 0], [2151666, 17959276, 2751154, 6328434, 1124530, 869852, 0], [2151666, 17959276, 2751154, 6328434, 1124530, 869852, 0], [2151666, 17959276, 2751154, 6328434, 1124530, 869852, 0], [2151666, 17959276, 2751154, 6328434, 1124530, 869852, 0], [2151666, 17959276, 2751154, 6328434, 1124530, 869852, 0], [2151666, 17959276, 2751154, 6328434, 1124530, 869852, 0], [2151666, 17959276, 2751155, 6328434, 1124530, 869852, 0], [2151666, 17959276, 2751155, 6328436, 1124530, 869852, 0], [2151666, 17959276, 2751155, 6328436, 1124530, 869852, 0], [2151666, 17959276, 2751155, 6328436, 1124530, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751156, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751157, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751157, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751157, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751157, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751157, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751157, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751158, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751158, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751158, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751158, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751158, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751160, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751160, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751160, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751160, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751160, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751160, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751160, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751160, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751160, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751160, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328436, 1124533, 869852, 0], [2151666, 17959276, 2751161, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751161, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751161, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751161, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751161, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751161, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751161, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751161, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751162, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751163, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751163, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751163, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751163, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751163, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751163, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751163, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751163, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751163, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751164, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751164, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751164, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751164, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751164, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751164, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751164, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751164, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751164, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751164, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751164, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751165, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751165, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751165, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751165, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751165, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751165, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751165, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751165, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751165, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751165, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751165, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751166, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751166, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751166, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751166, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751167, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751168, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751168, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751168, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751168, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751168, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751169, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751169, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751169, 6328438, 1124535, 869852, 0], [2151666, 17959276, 2751169, 6328438, 1124554, 869852, 0], [2151666, 17959276, 2751169, 6328444, 1124554, 869852, 0], [2151666, 17959276, 2751169, 6328444, 1124554, 869852, 0], [2151666, 17959276, 2751169, 6328479, 1124555, 869852, 0], [2151666, 17959276, 2751169, 6328485, 1124557, 869852, 0], [2151666, 17959276, 2751169, 6328491, 1124558, 869852, 0], [2151666, 17959276, 2751169, 6328497, 1124558, 869852, 0], [2151666, 17959276, 2751169, 6328506, 1124558, 869852, 0], [2151666, 17959276, 2751169, 6328510, 1124558, 869852, 0], [2151666, 17959276, 2751169, 6328515, 1124558, 869852, 0], [2151666, 17959276, 2751169, 6328521, 1124558, 869852, 0], [2151666, 17959276, 2751169, 6328525, 1124558, 869852, 0], [2151666, 17959276, 2751170, 6328531, 1124558, 869852, 0], [2151666, 17959276, 2751170, 6328536, 1124558, 869852, 0], [2151666, 17959276, 2751170, 6328540, 1124558, 869852, 0], [2151666, 17959276, 2751170, 6328546, 1124558, 869852, 0], [2151666, 17959276, 2751170, 6328550, 1124558, 869852, 0], [2151666, 17959276, 2751170, 6328554, 1124558, 869852, 0], [2151666, 17959276, 2751171, 6328564, 1124558, 869852, 0], [2151666, 17959276, 2751172, 6328568, 1124558, 869852, 0], [2151666, 17959276, 2751172, 6328576, 1124558, 869852, 0], [2151666, 17959276, 2751172, 6328580, 1124558, 869852, 0], [2151666, 17959276, 2751172, 6328586, 1124558, 869852, 0], [2151666, 17959276, 2751172, 6328590, 1124558, 869852, 0], [2151666, 17959276, 2751172, 6328594, 1124558, 869852, 0], [2151666, 17959276, 2751172, 6328598, 1124558, 869852, 0], [2151666, 17959276, 2751172, 6328640, 1124562, 869852, 0], [2151666, 17959276, 2751172, 6328640, 1124562, 869852, 0], [2151666, 17959276, 2751172, 6328671, 1124563, 869852, 0], [2151666, 17959276, 2751172, 6328731, 1124566, 869852, 0], [2151666, 17959276, 2751172, 6328746, 1124568, 869852, 0], [2151666, 17959276, 2751172, 6328758, 1124568, 869852, 0], [2151666, 17959276, 2751172, 6328770, 1124568, 869852, 0], [2151666, 17959276, 2751173, 6328776, 1124568, 869852, 0], [2151666, 17959276, 2751173, 6328784, 1124568, 869852, 0], [2151666, 17959276, 2751173, 6328790, 1124568, 869852, 0], [2151666, 17959276, 2751173, 6328798, 1124618, 869852, 0], [2151666, 17959276, 2751173, 6328808, 1124618, 869852, 0], [2151666, 17959276, 2751173, 6328822, 1124618, 869852, 0], [2151666, 17959276, 2751174, 6328829, 1124618, 869852, 0], [2151666, 17959276, 2751175, 6328831, 1124618, 869852, 0], [2151666, 17959276, 2751176, 6328833, 1124618, 869852, 0], [2151666, 17959276, 2751177, 6328835, 1124618, 869852, 0], [2151666, 17959276, 2751178, 6328835, 1124618, 869852, 0], [2151666, 17959276, 2751179, 6328835, 1124618, 869852, 0], [2151666, 17959276, 2751180, 6328835, 1124618, 869852, 0], [2151666, 17959276, 2751181, 6328837, 1124618, 869852, 0], [2151666, 17959276, 2751182, 6328837, 1124618, 869852, 0], [2151666, 17959276, 2751183, 6328837, 1124618, 869852, 0], [2151666, 17959276, 2751184, 6328837, 1124618, 869852, 0], [2151666, 17959276, 2751187, 6328837, 1124618, 869852, 0], [2151666, 17959276, 2751187, 6328837, 1124618, 869852, 0], [2151666, 17959276, 2751187, 6328839, 1124618, 869852, 0], [2151666, 17959276, 2751187, 6328839, 1124618, 869852, 0], [2151666, 17959276, 2751187, 6328839, 1124618, 869852, 0], [2151666, 17959276, 2751187, 6328839, 1124618, 869852, 0], [2151666, 17959276, 2751187, 6328839, 1124618, 869852, 0], [2151666, 17959276, 2751187, 6328839, 1124618, 869852, 0], [2151666, 17959276, 2751187, 6328839, 1124618, 869852, 0], [2151666, 17959276, 2751187, 6328839, 1124618, 869852, 0], [2151666, 17959276, 2751188, 6328839, 1124618, 869852, 0], [2151666, 17959276, 2751188, 6328839, 1124618, 869852, 0], [2151666, 17959276, 2751188, 6328839, 1124618, 869852, 0], [2151666, 17959276, 2751188, 6328841, 1124618, 869852, 0], [2151666, 17959276, 2751188, 6328841, 1124618, 869852, 0], [2151666, 17959276, 2751188, 6328841, 1124618, 869852, 0], [2151666, 17959276, 2751189, 6328843, 1124618, 869852, 0], [2151666, 17959276, 2751189, 6328843, 1124618, 869852, 0], [2151666, 17959276, 2751189, 6328844, 1124618, 869852, 0], [2151666, 17959276, 2751190, 6328845, 1124618, 869852, 0], [2151666, 17959276, 2751192, 6328845, 1124618, 869852, 0], [2151666, 17959276, 2751192, 6328845, 1124618, 869852, 0], [2151666, 17959276, 2751192, 6328845, 1124618, 869852, 0], [2151702, 17960400, 2856935, 7206514, 1269399, 598144, 0], [2151702, 17960400, 2856936, 7206514, 1269399, 598144, 0], [2151702, 17960400, 2856936, 7206514, 1269399, 598144, 0], [2151702, 17960400, 2856936, 7206514, 1269399, 598144, 0], [2151702, 17960400, 2856985, 7206582, 1269778, 598144, 0], [2151702, 17960400, 2856985, 7206582, 1269778, 598144, 0], [2151702, 17960400, 2856985, 7206582, 1269778, 598144, 0], [2151702, 17960400, 2856985, 7206582, 1269778, 598144, 0], [2151702, 17960400, 2857071, 7206709, 1270348, 598144, 0], [2151702, 17960400, 2857071, 7206709, 1270348, 598144, 0], [2151702, 17960400, 2857071, 7206709, 1270348, 598144, 0], [2151702, 17960400, 2857071, 7206709, 1270348, 598144, 0], [2151702, 17960400, 2857260, 7207207, 1271565, 597640, 0], [2151702, 17960400, 2857260, 7207207, 1271565, 597640, 0], [2151702, 17960400, 2857260, 7207209, 1271567, 597640, 0], [2151702, 17960400, 2857260, 7207209, 1271567, 597640, 0]]
# dirty_list = dirty_list[:50]
# access_list = access_list[:50]
# system_list = system_list[:50]
class CustomDataset1(Dataset):
    def __init__(self, train_dirty_seq):
        self.train_dirty_seq = train_dirty_seq

    def __len__(self):
        # 假设所有序列的长度相同，返回其中一个的长度即可
        return len(self.train_dirty_seq)

    def __getitem__(self, idx):
        # 返回单个样本及其标签
        sample = {
            'train_seq1': self.train_dirty_seq[idx][0],
            'train_seq2': self.train_dirty_seq[idx][1],
            'train_seq3': self.train_dirty_seq[idx][2][0],
        }
        return sample

def unstable_page_inference(dirty_list, access_list, system_list):
    test_dirty = np.array(dirty_list).astype(float)
    test_access = np.array(access_list).astype(float)
    test_system = np.array(system_list).astype(float)
    scaler = MinMaxScaler(feature_range=(0, 1))
    test_data_normalized = scaler.fit_transform(test_system)
    test_data_dirty = torch.FloatTensor(test_dirty).view(-1)
    test_data_access = torch.FloatTensor(test_access).view(-1)
    test_data_system = torch.FloatTensor(test_data_normalized)
    train_seq1 = test_data_dirty[:50]
    train_seq2 = test_data_access[:50]
    train_seq3 = torch.zeros((1, 7))
    for ele in test_data_system[:50]:
        train_seq3 += ele
    train_seq3 = [j / 50 for j in train_seq3]
    test_dirty_seq = [[train_seq1, train_seq2, train_seq3]]
    dataset1 = CustomDataset1(test_dirty_seq)
    batch_number1 = 1  # 你可以根据需要调整批处理大小
    dataloader1 = DataLoader(dataset1, batch_size=batch_number1, shuffle=False)
    model = SSDP(input_size=1, hidden_layer_size=50, output_size=3, head_num=2,
                 batch_size=batch_number1)
    for batch in dataloader1:
        train_seq1_batch = batch['train_seq1']
        train_seq2_batch = batch['train_seq2']
        train_seq3_batch = batch['train_seq3']
        model.hidden_cell1 = (torch.zeros(1, batch_number1, model.hidden_layer_size),
                              torch.zeros(1, batch_number1, model.hidden_layer_size))
        model.hidden_cell2 = (torch.zeros(1, batch_number1, model.hidden_layer_size),
                              torch.zeros(1, batch_number1, model.hidden_layer_size))
        # process = psutil.Process()
        pred = model([train_seq1_batch, train_seq2_batch, train_seq3_batch])
        for i in range(0, len(pred[0])):
            if pred[0][i] >= 0.5:
                pred[0][i] = 1
            else:
                pred[0][i] = 0
        return pred[0]
# unstable_page_inference(dirty_list, access_list, system_list)